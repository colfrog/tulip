{% extends "laurent/layout" %}

{% block title %}Blog{% endblock title %}

{% block style %}
<style>
  main {
      display: grid;
      grid-template-areas: "aside blog";
      grid-template-rows: 1fr;
      grid-template-columns: min(25%, 200px) 1fr;
      overflow: auto;
  }

  aside {
      grid-area: aside;
      background-color: #333;
      color: #ddd;
      overflow: scroll;
  }

  aside > h5 {
      margin: 24px;
  }

  #blog-content {
      grid-area: "blog";
      overflow: scroll;
  }

  .post-content {
      display: block;
      padding: 40px;
      margin-top: 10px;
      text-align: left;
      background-color: lightgreen;
      color: black;
  }

  .post-content img {
      object-fit: contain;
      width: 100%;
      height: auto;
  }

  .post {
      background-color: teal;
      display: flex;
      justify-content: center;
      flex-direction: column;
      text-align: center;

      margin: 50px 5%;
      border-radius: 14px;
  }
</style>
{% endblock style %}

{% block content %}
<aside></aside>
<div id="blog-content">
</div>
{% endblock content %}

{% block script %}
<script>
  let navBlog = document.querySelector("#nav-blog");
  navBlog.className = "activated";
  {% if logged_in %}
  let newPostLink = '<a id="nav-new-post" href="/new">New Post</a>';
  navBlog.insertAdjacentHTML('afterend', newPostLink);
  {% endif %}
  
  fetch("/blog/laurent")
	.then(response => response.json())
	.then(json => {
		let blogContent = document.querySelector("#blog-content");
		let aside = document.querySelector("aside");
		json.forEach(post => {
			blogContent.innerHTML += `
<div id="${postURL(post.title)}" class="post post${post.id}">
  <h1 onclick="togglePost(${post.id})">${post.title}</h1>
  <h5>${post.submitted}</h5>
</div>
`;
			aside.innerHTML += `<h5 onclick="togglePost(${post.id})">${post.title}</h5>`;
		});

		return json;
	})
	.then(json => {
		json.forEach(post => {
			if (location.href.endsWith(`#${postURL(post.title)}`))
				togglePost(post.id);
		});
	});
  
  const punctuation = '!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~';
  function removePunctuation(string) {
	  return string
		  .split('')
		  .filter(function(letter) {
			  return punctuation.indexOf(letter) === -1;
		  })
		  .join('');
  }
  
  function postURL(title) {
	  let url = title.toLowerCase();
	  url = removePunctuation(url);
	  url = url.replace(/ /g, '-');
	  return url;
  }

  function togglePost(id) {
	  console.log("Toggle post called", id);
	  let post = document.querySelector(`.post${id}`);
	  let content = document.querySelector(`#content${id}`);
	  if (!content)
		  fetch(`/blog/laurent/${id}`)
		  .then(response => response.text())
		  .then(html => {
			  post.innerHTML += `
<article id="content${id}" class="post-content">${html}</article>
`;
			  location.href = `#${post.id}`;
		  });
	  else {
		  post.removeChild(content);
	  }
  }
</script>
{% endblock script %}
